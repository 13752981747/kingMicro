<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
     	http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
	<description>system center platform</description>
 	<context:component-scan base-package="com.king" />
 	<aop:aspectj-autoproxy proxy-target-class="true" />
<!-- 引入property -->
	 <!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
	 <!--  启用密码加密-->
	 <bean class="com.king.common.utils.spring.PropertyPlaceholderConfigurerExt">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<!-- 容许多次加载属性文件 -->
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
					<value>classpath:/settings.properties</value>
			</list>
		</property>
	</bean>

	<!-- 读库 -->
	<bean name="readDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="name" value="${salve.hostname}" />
		<property name="url" value="${smp.jdbc.salve.jdbcUrl}" />
		<property name="driverClassName" value="${smp.jdbc.driverClass}" />
		<property name="username" value="${smp.jdbc.salve.user}" />
		<property name="password" value="${smp.jdbc.salve.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${smp.druid.initialSize}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${smp.druid.minIdle}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${smp.druid.maxActive}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${smp.druid.maxWait}" />
		<property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="100" />
		<property name="defaultReadOnly" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 180秒，也就是3分钟 -->
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 开启Druid的监控统计、sql防注入功能 -->
		<property name="filters" value="stat,wall" />
		<!--<property name="filters" value="mergeStat" /> -->
		<!-- Oracle连接是获取字段注释 -->
		<!-- <property name="connectProperties">
			<props>
				<prop key="remarksReporting">true</prop>
			</props>
		</property> -->
	</bean>
	
	<!-- 	写库 -->
	<bean name="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="name" value="${master.hostname}" />
		<property name="url" value="${smp.jdbc.master.jdbcUrl}" />
		<property name="driverClassName" value="${smp.jdbc.driverClass}" />
		<property name="username" value="${smp.jdbc.master.user}" />
		<property name="password" value="${smp.jdbc.master.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${smp.druid.initialSize}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${smp.druid.minIdle}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${smp.druid.maxActive}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${smp.druid.maxWait}" />
		<property name="poolPreparedStatements" value="true" /> 
		<property name="maxPoolPreparedStatementPerConnectionSize" value="100" />
		<property name="defaultReadOnly" value="false" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 180秒，也就是3分钟 -->
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="wall,stat"/>
		<!--<property name="filters" value="mergeStat" /> -->
		<!-- Oracle连接是获取字段注释 -->
	<!-- 	<property name="connectProperties">
			<props>
				<prop key="remarksReporting">true</prop>
			</props>
		</property> -->
	</bean>
	
	<!-- druid数据源配置 -->
	<bean id="dataSource" class="com.king.common.aspect.ChooseDataSource" lazy-init="true">
		<description>数据源</description>
		<property name="targetDataSources">
			<map key-type="java.lang.String" value-type="javax.sql.DataSource">
				<!-- write -->
				<entry key="write" value-ref="writeDataSource" />
				<!-- read -->
				<entry key="read" value-ref="readDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="writeDataSource" />
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 驼峰转换 -->
	<bean id="config" class="org.apache.ibatis.session.Configuration">
		<property name="mapUnderscoreToCamelCase" value="true"  /> 
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configuration" ref="config" /> 
		<property name="mapperLocations" value="classpath:mapper/**/*.xml" /> 
		<property name="dataSource" ref="dataSource" />
	</bean>

	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.king.dao" />
	</bean>

	<!-- 没有必要在 Spring 的 XML 配置文件中注册所有的映射器。相反,你可以使用一个 MapperScannerConfigurer 
		, 它 将 会 查 找 类 路 径 下 的 映 射 器 并 自 动 将 它 们 创 建 成 MapperFactoryBean。 如果你使 用了一个 
		以上的 DataSource ,那 么自动 装配可 能会失效 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.king.dao" />
	</bean> -->
</beans>